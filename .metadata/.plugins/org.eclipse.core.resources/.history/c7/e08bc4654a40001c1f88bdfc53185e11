/**
* @main.c
* @brief
*
*This program accepts two inputs from user and search for the 8 or 16 bit
pattern.
*
*
*
* @note
*
* Revision History:
* - 220921  DAM : Creation Date
*/

#include <stdio.h>
#include "board.h"
#include "peripherals.h"
#include "pin_mux.h"
#include "clock_config.h"
#include "MK64F12.h"
#include "fsl_debug_console.h"

/*******************************************
* Const and Macro Defines
*******************************************/

#define ARGC_REQUIRED 3
#define ARGC_MINIMUM 1

/***********************************
* Typedefs and Enum Declarations
***********************************/

// none

/***********************************
* External Variable Declarations
***********************************/

// none

/***********************************
* Const Declarations
***********************************/

// none

/***********************************
* Public Variables
***********************************/

// none

/***********************************
* Private Variables
***********************************/

// none

/***********************************
* Private Prototypes
***********************************/

void manual(void);

/***********************************
* Public Functions
***********************************/

/**
* @manual
* @brief
*
*This function displys the help option for user
*
*
*
* @note
*
* Revision History:
* - 240921  DAM : Creation Date
*/


int main(void) {

    /* Init board hardware. */
    BOARD_InitBootPins();
    BOARD_InitBootClocks();
    BOARD_InitBootPeripherals();
#ifndef BOARD_INIT_DEBUG_CONSOLE_PERIPHERAL
    /* Init FSL debug console. */
    BOARD_InitDebugConsole();
#endif

    PRINTF("Hello World\n");

    /* Force the counter to be placed into memory. */
    volatile static int i = 0 ;
    /* Enter an infinite loop, just incrementing a counter. */
    while(1) {
        i++ ;
        /* 'Dummy' NOP to allow source level single stepping of
            tight while() loop */
        __asm volatile ("nop");
    }
    return 0 ;
}
